# Generated by Django 3.1.4 on 2020-12-22 14:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contest', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(max_length=3, null=True)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('pub_date', models.DateField(auto_now_add=True)),
                ('input_format', models.TextField()),
                ('output_format', models.TextField()),
                ('time_limit', models.IntegerField()),
                ('memory_limit', models.IntegerField(default=0)),
                ('create_time', models.DateField(auto_now_add=True)),
                ('source', models.TextField(null=True)),
                ('score', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'problem',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.FileField(upload_to='tests/inputs/')),
                ('output', models.FileField(upload_to='tests/outputs/')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.problem')),
            ],
            options={
                'db_table': 'test',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.problem')),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, null=True)),
                ('file', models.FileField(upload_to='submissions/')),
                ('source_code', models.TextField(blank=True, null=True)),
                ('submit_time', models.DateTimeField(blank=True, null=True)),
                ('language', models.CharField(choices=[('C', 'C'), ('Java', 'Java'), ('Python', 'Python'), ('C++', 'C++')], max_length=100)),
                ('verdict', models.CharField(choices=[('AC', 'Accepted'), ('WA', 'Wrong Answer'), ('TLE', 'Time Limit Exceeded'), ('RE', 'Runtime Error'), ('CE', 'Compilation Error')], default='CE', max_length=3)),
                ('time', models.IntegerField(default=1000)),
                ('memory', models.IntegerField(default=0)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('contest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contest.contest')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.problem')),
            ],
            options={
                'db_table': 'submission',
                'ordering': ['-submit_time'],
            },
        ),
    ]
